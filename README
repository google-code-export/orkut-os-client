------------------------
The orkut Client Library
------------------------

----------------
--INTRODUCTION--
----------------

	The orkut client library allows access to read and update orkut's social data.
	
	The client library is "experimental" at present and may change in the future.
	
	You can download the latest version of the client library from 
	http://code.google.com/p/orkut-os-client/
	
	Checkout the latest javadoc for this project at
	http://orkut-os-client.googlecode.com/hg/java/doc
	
	Please refer to the orkut Developer Terms of Service at:
	http://www.orkut.com/Main#DeveloperTerms.aspx.
	
	Please also check the orkut Branding Guidelines here:
	http://www.orkut.com/html/en-US/branding.guidelines.html.
	
	For bugs reporting or feature requests, please get in touch with us at our
	developer forum:
	http://groups.google.com/group/opensocial-orkut.

---------
--USAGE--
---------

1. Requirements
---------------
	* ant
		If typing ant on the command-line throws errors, try:
		sudo apt-get install ant  # (on debian systems)
		or get the latest version of ant from http://ant.apache.org/
	* java development kit (JDK)
		This library has been built and runs on Java 1.5 (J2SE 5.0) and
		on Java 1.6 (JDK 6). YMMV across different Java versions. You can
		get the latest and greatest versions of JDK from http://java.sun.com/

2. Steps to Build
------------------
	# (Only if you don't have ant)
	sudo apt-get install ant
	
	cd java/
	ant
	
	Make sure there are no build errors.

3. Get OAuth keys for your app 
------------------------------
	Before you can start using the API or run the sample given here, you need 
	to get the OAuth consumer key and secret. Please visit the following URL for
	instructions on registering your app and getting an OAuth consumer key and
	secret.
	
	http://code.google.com/apis/accounts/docs/RegistrationForWebAppsAuto.html#new
	
	The consumer key is usually your site url, e.g. "my.site.com", while the
	consumer secret is a cryptographically secure random string e.g.
	"Masdsadl213mzza0Y/l"

4. Install the keys for use by sample app 
-----------------------------------------
	The OAuth related details are stored in java/sample/oauth.properties
	
	Edit the file and enter the consumer key and secret in there. Leave everything
	else untouched.
	
	consumerSecret=<your-app-consumer-secret>
	consumerKey=<your-app-consumer-key>
	
	To test if your keys are valid and everything is fine, run the following
	command from your console.
	
	cd java/
	ant test-auth
	
	This would open an OAuth flow, by opening a browser window. Once you are
	through that flow, you should see this messsage on the console.
	
	"*** Authentication PASSED ***"
	
	If you see the above message, then you are ready to run other samples. On the
	other hand, if you see a stack trace or some other error message, then
	3-legged OAuth failed.

5. Steps to run sample app
--------------------------
	Before you can start using the sample, you need to get the OAuth consumer key &
	secret. See section 3 & 4 on how to get those keys for your app and how to
	install them.
	
	After you have installed the keys, try
	
		cd java/
		ant run-sample
	
	The sample app should open a browser window where it'll ask your permission
	to allow access to orkut data. Following this, the sample app will request
	and print a list of your orkut friends.

6. More sample apps
-------------------
	You can try these out once the authentication has been done. Refer to build.xml in
	java/ for the list of available samples. Take a look at the code in
	java/sample/sample-src/com/google/orkut/client/sample/.
	
	For example, to run all the supplied samples, type
		ant run-all-samples
	
	Play around with these or try out your own!

7. Building Documentation
-------------------------

	In java/ directory, issue the command
	
		ant javadoc
	
	Documentation will be generated in java/doc.

8. Building the client library jar
----------------------------------

	In java/ directory, issue the command
	
		ant dist
	
	This builds the client library in java/dist/lib/.


----------------
--KNOWN ISSUES--
----------------

	1. Getting and setting activity comments is currently not possible.
	
	2. Fetching activity updates beyond the first page doesn't yet work as
	expected and there may be a few updates missing from the list compared to what
	is visible on the website.
	
	3. Internationalization of profile fields is not supported.

--------
--FAQs--
--------

	1. The following information from the user profile can be obtained:
	Name, Status, Emails, Gender, Phone Numbers, Birthday and Address.
	
	2. For a list of supported activity updates please refer to the class
	ActivityEntry.
	
	3. Limits on photo uploads are the same as that on the web frontend: you can
	upload photos upto 10MB in size. Each album can store 100 photos, and there
	can be up to 10,000 photos in an account. The allowed file types are JPG, GIF
	and PNG.

	4. Captcha handling
	The API may occasionally throw Captchas to validate that it's indeed a human 
	issuing the requests, for example, for the very frequent scrap posts. Captchas 
	can be expected any time and, in general, every transaction should ideally be 
	checked for a Captcha challenge.
	
	A brief overview of how to handle a captcha can be found here: 
	http://code.google.com/p/orkut-os-client/source/browse/java/src/com/google/orkut/client/api/CaptchaTxFactory.java.
	
	A typical image URL returned from the challenge is 
	/social/pages/captcha?xid=yyy. That must be prefixed with the endpoint URL 
	(http://www.orkut.com), and then the Captcha image must be retrieved from the 
	complete URL (http://www.orkut.com/social/pages/captcha?xid=yyy) using OAuth.
	
	For a more concrete example, please refer to the source of our reference 
	implementation -- Fotoscrapr -- that can be found at: 
	http://code.google.com/p/orkut-os-client-greetings/source/browse/src/com/google/orkut/client/api/samples/greetings/server/servlets/CaptchaServlet.java.
	
	5. If you wish to use this library commercially, you can do so without
	seeking our permission as long as you conform to
	
		a. the Developer Terms of Service
		(http://www.orkut.com/Main#DeveloperTerms.aspx), and 
		
		b. the proper usage of the logo according to the branding guidelines
		(http://www.orkut.com/html/en-US/branding.guidelines.html). 
	
	But if you need to use the 'orkut' logo (instead of the 'Powered by orkut'
	logo) and/or you hit the quota limits as defined in the Developer ToS (see a.
	above),	please get in touch with us at orkutapirequests@google.com for a 
	contract.

Enjoy!
The orkut team
